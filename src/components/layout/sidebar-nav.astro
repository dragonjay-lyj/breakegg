---
import { cn } from "@/lib/utils";
import type { SidebarNavItem } from "@/types";

type Props = {
  items: SidebarNavItem[];
};

const { items } = Astro.props;
const { pathname } = Astro.url;
---

{
  items.length ? (
    <div class="w-full">
      {items.map((item) => (
        <div class={cn("pb-8")}>
          <h4 class="mb-2 text-lg font-semibold tracking-wide rounded-md px-3 py-1.5 bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white">
            {item.title}
          </h4>

          {item.items?.length ? (
            <div class="grid grid-cols-1 gap-4 md:grid-cols-2 xl:grid-cols-3 text-sm">
              {item.items.map((subItem) =>
                !subItem.disabled && subItem.href ? (
                  <a
                    href={subItem.href}
                    class={cn(
                      "flex flex-col w-full items-center justify-center rounded-md p-4 transition duration-300 hover:bg-gray-200 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white",
                      pathname === subItem.href && "bg-gray-200 dark:bg-gray-600 text-gray-900 dark:text-white"
                    )}
                    target={subItem.external ? "_blank" : ""}
                    rel={subItem.external ? "noreferrer" : ""}
                  >
                    <span class="text-base">{subItem.title}</span>
                  </a>
                ) : (
                  <span
                    class="flex flex-col w-full cursor-not-allowed items-center justify-center rounded-md p-4 opacity-60 text-gray-400 dark:text-gray-500"
                  >
                    <span class="text-base">{subItem.title}</span>
                  </span>
                )
              )}
            </div>
          ) : null}
        </div>
      ))}
    </div>
  ) : null
}
